name: Development CI

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  backend:
    name: Backend Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore .NET dependencies
        run: dotnet restore

      - name: Build Backend
        run: dotnet build --no-restore --configuration Release

      - name: Run Backend Tests
        run: dotnet test Backend.Test/Backend.Test.csproj --configuration Release --verbosity normal

  frontend:
    name: Frontend Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'yarn'
          cache-dependency-path: Frontend/yarn.lock

      - name: Install Frontend dependencies
        working-directory: Frontend
        run: |
          npm install -g yarn
          yarn install

      - name: Build Frontend
        working-directory: Frontend
        env:
          VITE_API_BASE_URL: "/api"
          VITE_API_KEY: "${{ secrets.API_KEY }}"
        run: yarn build

      # Debug : Verify App.jsx contains required config
      - name: Verify App.jsx rebuild
        run: |
          if grep -q "Using configuration" Frontend/src/App.jsx || \
            grep -q "API Base URL" Frontend/src/App.jsx || \
            grep -q "API Key" Frontend/src/App.jsx; then
            echo "❌ dev: App.jsx still contains debug lines - build failed to update" && exit 1
          else
            echo "✅ dev: App.jsx has been properly rebuilt"
          fi