---
- name: Deploy TBAS Application
  hosts: app_server
  become: yes
  vars:
    deployment_timestamp: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"
  tasks:
    - name: Verifiera app-mapp
      stat:
        path: /app
      register: app_dir
      failed_when: not app_dir.stat.exists

    - name: Stoppa och ta bort ALLA containers och images
      block:
        - name: Stoppa alla containers
          shell: docker stop $(docker ps -aq) || true

        - name: Ta bort alla containers
          shell: docker rm $(docker ps -aq) || true

        - name: Ta bort alla images
          shell: docker rmi $(docker images -q) || true

        - name: Prune docker system
          shell: docker system prune -af
      ignore_errors: yes

    - name: Skapa timestamp fil för att tvinga rebuild
      copy:
        content: "{{ deployment_timestamp }}"
        dest: /app/.buildtime
        mode: '0644'

    - name: Konfigurera miljöfiler
      block:
        - name: Backend .env
          copy:
            content: |
              MONGODB_URI="mongodb://{{ lookup('env', 'MONGODB_USER') }}:{{ lookup('env', 'MONGODB_PASSWORD') }}@mongodb:27017/{{ lookup('env', 'MONGODB_DATABASE') }}?authSource=admin"
              API_KEY="{{ lookup('env', 'API_KEY') }}"
              MONGODB_ADMIN="{{ lookup('env', 'MONGODB_ADMIN') }}"
              MONGODB_ADMIN_PASSWORD="{{ lookup('env', 'MONGODB_ADMIN_PASSWORD') }}"
              MONGODB_DATABASE="{{ lookup('env', 'MONGODB_DATABASE') }}"
            dest: /app/.env
            mode: '0600'

        - name: Frontend .env
          copy:
            content: |
              VITE_API_BASE_URL="http://{{ lookup('env', 'AZURE_VM_IP') }}/api"
              VITE_API_KEY="{{ lookup('env', 'API_KEY') }}"
              BUILD_TIME="{{ deployment_timestamp }}"
            dest: /app/Frontend/.env
            mode: '0600'

    - name: Bygg och starta med Docker Compose
      shell: |
        cd /app
        docker compose build --no-cache
        docker compose up -d --force-recreate
      environment:
        BUILD_TIME: "{{ deployment_timestamp }}"

    - name: Vänta på att containers ska starta
      pause:
        seconds: 10

    - name: Verify Frontend build
      shell: |
        CONTAINER_ID=$(docker ps -q -f name=tbas_frontend)
        if [ -z "$CONTAINER_ID" ]; then
          echo "Frontend container not found" >&2
          exit 1
        fi

        docker cp ${CONTAINER_ID}:/usr/share/nginx/html/assets/App-*.js /tmp/App.js

        if grep -q "Using configuration" /tmp/App.js || \
           grep -q "API Base URL" /tmp/App.js || \
           grep -q "API Key" /tmp/App.js; then
          echo "❌ Frontend container: App.js still contains debug lines - build failed to update" >&2
          exit 1
        else
          echo "✅ Frontend container: App.js has been properly rebuilt"
        fi
      register: verify_result
      failed_when: verify_result.rc != 0