---
- name: Deploy Application
  hosts: app_server
  become: yes
  tasks:

    # Rensa gamla filer
    - name: Rensa gamla filer
      shell: |
        cd /app
        sudo rm -rf Frontend/* Backend/*
        sudo rm -f *.sln *.yml docker-compose.yml mongo-init.js .env
        sudo chown -R 1001:docker .
      ignore_errors: yes

    # Kopiera alla filer med rsync
    - name: Kopiera applikationskod
      synchronize:
        src: "{{ playbook_dir }}/../../"  # Använd absolut sökväg
        dest: /app/
        rsync_opts:
          - "--exclude=.git"
          - "--exclude=.github"
          - "--exclude=node_modules"
          - "--exclude=infrastructure"
          - "--exclude=ansible"
          - "--exclude=terraform"
          - "--chown=azureuser:docker"
        delete: yes
      delegate_to: localhost

    # Konfigurera miljöfiler
    - name: Konfigurera miljöfiler
      block:
        - name: Backend .env
          copy:
            content: |
              MONGODB_URI="mongodb://{{ lookup('env', 'MONGODB_USER') }}:{{ lookup('env', 'MONGODB_PASSWORD') }}@mongodb:27017/{{ lookup('env', 'MONGODB_DATABASE') }}?authSource=admin"
              API_KEY="{{ lookup('env', 'API_KEY') }}"
              MONGODB_ADMIN="{{ lookup('env', 'MONGODB_ADMIN') }}"
              MONGODB_ADMIN_PASSWORD="{{ lookup('env', 'MONGODB_ADMIN_PASSWORD') }}"
              MONGODB_DATABASE="{{ lookup('env', 'MONGODB_DATABASE') }}"
              AZURE_VM_IP="{{ lookup('env', 'AZURE_VM_IP') }}"
              CORS_ORIGIN="http://{{ lookup('env', 'AZURE_VM_IP') }}"
              CORS_ENABLED=true
              CORS_METHODS="GET,POST,OPTIONS,DELETE"
              CORS_ALLOWED_HEADERS="Content-Type,Authorization"
              CORS_EXPOSED_HEADERS="Content-Length,Content-Range"
              MONGODB_HOST=mongodb
            dest: /app/.env
            owner: azureuser
            group: docker
            mode: '0600'

        - name: Frontend .env
          copy:
            content: |
              VITE_API_KEY="{{ lookup('env', 'API_KEY') }}"
              VITE_BACKEND_URL="http://{{ lookup('env', 'AZURE_VM_IP') }}/api"
              AZURE_VM_IP="{{ lookup('env', 'AZURE_VM_IP') }}"
            dest: /app/Frontend/.env
            owner: azureuser
            group: docker
            mode: '0600'

    # Debug: Rensa Docker
    - name: Cleanup Docker
      shell: |
        cd /app
        docker compose down
        docker system prune -af --volumes
        rm -rf Frontend/node_modules Frontend/dist Backend/bin Backend/obj

    # Debug: Bygg och starta med Docker Compose
    - name: Bygg och starta med Docker Compose
      shell: |
        cd /app
        echo "Starting fresh build at $(date)"
        docker compose build --no-cache --pull

        # Meddelar om bygget lyckades eller inte
        if [ $? -eq 0 ]; then
          echo "Build completed successfully at $(date)"
        else
          echo "Build failed at $(date)"
          exit 1
        fi
        docker compose up -d
      register: compose_result

    # Starta om containrar med Docker Composer och bygger om det som behövs.
    # - name: Starta om containrar med Docker Compose
    #   shell: |
    #     cd /app
    #     docker compose up -d